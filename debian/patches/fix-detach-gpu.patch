Description: Fix crash in RRCrtcDetachScanoutPixmap.
Author: Maarten Lankhorst <maarten.lankhorst@ubuntu.com>
Bug-Ubuntu: https://launchpad.net/bugs/1280743

Index: xorg-server-1.17.2/hw/xfree86/modes/xf86RandR12.c
===================================================================
--- xorg-server-1.17.2.orig/hw/xfree86/modes/xf86RandR12.c
+++ xorg-server-1.17.2/hw/xfree86/modes/xf86RandR12.c
@@ -1786,7 +1786,8 @@ xf86RandR14ProviderSetOutputSource(Scree
             ScreenPtr cmScreen = pScreen->current_master;
 
             xf86DetachOutputGPU(pScreen);
-            AttachUnboundGPU(cmScreen, pScreen);
+            if (!pScreen->current_master)
+                AttachUnboundGPU(cmScreen, pScreen);
         }
         provider->output_source = NULL;
         return TRUE;
@@ -1797,7 +1798,8 @@ xf86RandR14ProviderSetOutputSource(Scree
 
     SetRootClip(source_provider->pScreen, FALSE);
 
-    DetachUnboundGPU(pScreen);
+    if (!pScreen->current_master)
+        DetachUnboundGPU(pScreen);
     AttachOutputGPU(source_provider->pScreen, pScreen);
 
     provider->output_source = source_provider;
@@ -1814,7 +1816,8 @@ xf86RandR14ProviderSetOffloadSink(Screen
         if (provider->offload_sink) {
             ScreenPtr cmScreen = pScreen->current_master;
             xf86DetachOutputGPU(pScreen);
-            AttachUnboundGPU(cmScreen, pScreen);
+            if (!pScreen->current_master)
+                AttachUnboundGPU(cmScreen, pScreen);
         }
 
         provider->offload_sink = NULL;
@@ -1824,7 +1827,8 @@ xf86RandR14ProviderSetOffloadSink(Screen
     if (provider->offload_sink == sink_provider)
         return TRUE;
 
-    DetachUnboundGPU(pScreen);
+    if (!pScreen->current_master)
+        DetachUnboundGPU(pScreen);
     AttachOffloadGPU(sink_provider->pScreen, pScreen);
 
     provider->offload_sink = sink_provider;
@@ -1903,12 +1907,14 @@ xf86RandR14ProviderDestroy(ScreenPtr scr
             config->randr_provider->offload_sink = NULL;
             RRSetChanged(screen);
         }
-        else if (config->randr_provider->output_source) {
+
+        if (config->randr_provider->output_source) {
             xf86DetachOutputGPU(screen);
             config->randr_provider->output_source = NULL;
             RRSetChanged(screen);
         }
-        else if (screen->current_master)
+
+        if (screen->current_master)
             DetachUnboundGPU(screen);
     }
     config->randr_provider = NULL;
Index: xorg-server-1.17.2/dix/dispatch.c
===================================================================
--- xorg-server-1.17.2.orig/dix/dispatch.c
+++ xorg-server-1.17.2/dix/dispatch.c
@@ -3954,6 +3954,8 @@ AttachUnboundGPU(ScreenPtr pScreen, Scre
     assert(new->isGPU);
     assert(!new->current_master);
     xorg_list_add(&new->unattached_head, &pScreen->unattached_list);
+    xorg_list_init(&new->offload_head);
+    xorg_list_init(&new->output_head);
     new->current_master = pScreen;
 }
 
@@ -3978,7 +3980,8 @@ DetachOutputGPU(ScreenPtr slave)
 {
     assert(slave->isGPU);
     xorg_list_del(&slave->output_head);
-    slave->current_master = NULL;
+    if (xorg_list_is_empty(&slave->offload_head))
+        slave->current_master = NULL;
 }
 
 void
@@ -3994,6 +3997,7 @@ DetachOffloadGPU(ScreenPtr slave)
 {
     assert(slave->isGPU);
     xorg_list_del(&slave->offload_head);
-    slave->current_master = NULL;
+    if (xorg_list_is_empty(&slave->output_head))
+        slave->current_master = NULL;
 }
 
