Index: xorg-server/hw/xfree86/parser/Configint.h
===================================================================
--- xorg-server.orig/hw/xfree86/parser/Configint.h	2008-03-02 17:09:50.000000000 -0500
+++ xorg-server/hw/xfree86/parser/Configint.h	2008-03-02 18:33:14.000000000 -0500
@@ -71,11 +71,14 @@
 #include <stddef.h>
 #include "xf86Parser.h"
 
+typedef enum { PARSE_DECIMAL, PARSE_OCTAL, PARSE_HEX } ParserNumType;
+
 typedef struct
 {
 	int num;		/* returned number */
 	char *str;		/* private copy of the return-string */
 	double realnum;		/* returned number as a real */
+        ParserNumType numType;  /* used to enforce correct number formatting */
 }
 LexRec, *LexPtr;
 
@@ -215,6 +218,8 @@
 "\ta numerical group id."
 #define MULTIPLE_MSG \
 "Multiple \"%s\" lines."
+#define MUST_BE_OCTAL_MSG \
+"The number \"%d\" given in this section must be in octal (0xxx) format."
 
 /* Warning messages */
 #define OBSOLETE_MSG \
Index: xorg-server/hw/xfree86/parser/DRI.c
===================================================================
--- xorg-server.orig/hw/xfree86/parser/DRI.c	2008-03-02 17:09:50.000000000 -0500
+++ xorg-server/hw/xfree86/parser/DRI.c	2008-03-02 18:33:14.000000000 -0500
@@ -117,6 +117,8 @@
 	    case MODE:
 		if (xf86getSubToken (&(ptr->dri_comment)) != NUMBER)
 		    Error (NUMBER_MSG, "Mode");
+                if (val.numType != PARSE_OCTAL)
+                    Error (MUST_BE_OCTAL_MSG, val.num);
 		ptr->dri_mode = val.num;
 		break;
 	    case BUFFERS:
Index: xorg-server/hw/xfree86/parser/scan.c
===================================================================
--- xorg-server.orig/hw/xfree86/parser/scan.c	2008-03-02 18:33:23.000000000 -0500
+++ xorg-server/hw/xfree86/parser/scan.c	2008-03-02 18:33:29.000000000 -0500
@@ -379,11 +379,20 @@
 			if (c == '0')
 				if ((configBuf[configPos] == 'x') ||
 					(configBuf[configPos] == 'X'))
+                                {
 					base = 16;
+                                        val.numType = PARSE_HEX; 
+                                }
 				else
+                                {
 					base = 8;
+                                        val.numType = PARSE_OCTAL;
+                                }
 			else
+                        {
 				base = 10;
+                                val.numType = PARSE_DECIMAL;
+                        }
 
 			configRBuf[0] = c;
 			i = 1;
