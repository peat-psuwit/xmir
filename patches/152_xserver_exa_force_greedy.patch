diff -Nurp xorg-server-patched/exa/exa.c xorg-server-working/exa/exa.c
--- xorg-server-patched/exa/exa.c	2008-02-19 11:16:26.000000000 -0800
+++ xorg-server-working/exa/exa.c	2008-02-19 11:48:42.000000000 -0800
@@ -643,6 +643,11 @@ exaDriverInit (ScreenPtr		pScreen,
     pScreen->devPrivates[exaScreenPrivateIndex].ptr = (pointer) pExaScr;
 
     pExaScr->migration = ExaMigrationAlways;
+    if (pScreenInfo->flags & EXA_MIGRATION_GREEDY) {
+        pExaScr->migration = ExaMigrationGreedy;
+        LogMessage(X_INFO, "EXA(%d): Forcing greedy migration option\n",
+		   pScreen->myNum);
+    }
 
     exaDDXDriverInit(pScreen);
 
diff -Nurp xorg-server-patched/exa/exa.h xorg-server-working/exa/exa.h
--- xorg-server-patched/exa/exa.h	2008-02-19 11:16:26.000000000 -0800
+++ xorg-server-working/exa/exa.h	2008-02-19 11:19:36.000000000 -0800
@@ -695,6 +695,13 @@ typedef struct _ExaDriver {
  * (right-to-left, bottom-to-top).
  */
 #define EXA_TWO_BITBLT_DIRECTIONS	(1 << 2)
+
+/**
+ * EXA_MIGRATION_GREEDY indicates to EXA that the driver prefers to
+ * use the "greedy" migration heuristic.  This is to work around
+ * issues with EXA on the Intel 965 chipset. (LP: #177492)
+ */
+#define EXA_MIGRATION_GREEDY            (1 << 3)
 /** @} */
 
 ExaDriverPtr
