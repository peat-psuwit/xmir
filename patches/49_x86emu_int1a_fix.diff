commit 9e5b3deafb97ec1f83e6bfe067bc68df7385bc6a
Author: Adam Jackson <ajax@redhat.com>
Date:   Tue Jun 24 14:08:04 2008 -0400

    Bug #11842: Fix emulation of int1A PCI BIOS services.
    
    Use only %di to name the PCI register to read/write, rather than %edi.
    DOS is only expecting the base PCI config space anyway, and the BIOS
    might be using the high bits of %edi.

backported to pre-pciaccess, fixes #404885.

Index: xorg-server/hw/xfree86/int10/xf86int10.c
===================================================================
--- xorg-server.orig/hw/xfree86/int10/xf86int10.c	2008-06-24 20:31:06.000000000 +0200
+++ xorg-server/hw/xfree86/int10/xf86int10.c	2008-06-24 20:34:46.000000000 +0200
@@ -667,7 +667,7 @@
 	return 1;
     case 0xb108:
 	if ((tag = findPci(pInt, X86_EBX)) != PCI_NOT_FOUND) {
-	    X86_CL = pciReadByte(tag, X86_EDI);
+	    X86_CL = pciReadByte(tag, X86_DI);
 	    X86_EAX = X86_AL | (SUCCESSFUL << 8);
 	    X86_EFLAGS &= ~((unsigned long)0x01); /* clear carry flag */
 	} else {
@@ -680,7 +680,7 @@
 	return 1;
     case 0xb109:
 	if ((tag = findPci(pInt, X86_EBX)) != PCI_NOT_FOUND) {
-	    X86_CX = pciReadWord(tag, X86_EDI);
+	    X86_CX = pciReadWord(tag, X86_DI);
 	    X86_EAX = X86_AL | (SUCCESSFUL << 8);
 	    X86_EFLAGS &= ~((unsigned long)0x01); /* clear carry flag */
 	} else {
@@ -693,7 +693,7 @@
 	return 1;
     case 0xb10a:
 	if ((tag = findPci(pInt, X86_EBX)) != PCI_NOT_FOUND) {
-	    X86_ECX = pciReadLong(tag, X86_EDI);
+	    X86_ECX = pciReadLong(tag, X86_DI);
 	    X86_EAX = X86_AL | (SUCCESSFUL << 8);
 	    X86_EFLAGS &= ~((unsigned long)0x01); /* clear carry flag */
 	} else {
@@ -706,7 +706,7 @@
 	return 1;
     case 0xb10b:
 	if ((tag = findPci(pInt, X86_EBX)) != PCI_NOT_FOUND) {
-	    pciWriteByte(tag, X86_EDI, X86_CL);
+	    pciWriteByte(tag, X86_DI, X86_CL);
 	    X86_EAX = X86_AL | (SUCCESSFUL << 8);
 	    X86_EFLAGS &= ~((unsigned long)0x01); /* clear carry flag */
 	} else {
@@ -719,7 +719,7 @@
 	return 1;
     case 0xb10c:
 	if ((tag = findPci(pInt, X86_EBX)) != PCI_NOT_FOUND) {
-	    pciWriteWord(tag, X86_EDI, X86_CX);
+	    pciWriteWord(tag, X86_DI, X86_CX);
 	    X86_EAX = X86_AL | (SUCCESSFUL << 8);
 	    X86_EFLAGS &= ~((unsigned long)0x01); /* clear carry flag */
 	} else {
@@ -732,7 +732,7 @@
 	return 1;
     case 0xb10d:
 	if ((tag = findPci(pInt, X86_EBX)) != PCI_NOT_FOUND) {
-	    pciWriteLong(tag, X86_EDI, X86_ECX);
+	    pciWriteLong(tag, X86_DI, X86_ECX);
 	    X86_EAX = X86_AL | (SUCCESSFUL << 8);
 	    X86_EFLAGS &= ~((unsigned long)0x01); /* clear carry flag */
 	} else {
