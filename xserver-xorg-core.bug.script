#!/bin/sh

PATH="/sbin:$PATH"
CONFIG_DIR=/etc/X11
SERVER_SYMLINK="$CONFIG_DIR/X"
XORGCONFIG="$CONFIG_DIR/xorg.conf"
XORGCONFIG_DIR="$CONFIG_DIR/xorg.conf.d"
CONFIG_AUX_DIR=/var/lib/x11

exec >&3

if [ -e "$SERVER_SYMLINK" ]; then
    printf "X server symlink status:\n"
    ls -dl "$SERVER_SYMLINK"
    ls -dl "$(readlink "$SERVER_SYMLINK")"
else
    printf "$SERVER_SYMLINK does not exist.\n"
fi

if ! [ -L "$SERVER_SYMLINK" ]; then
    printf "$SERVER_SYMLINK is not a symlink.\n"
fi

if ! [ -x "$SERVER_SYMLINK" ]; then
    printf "$SERVER_SYMLINK is not executable.\n"
fi

printf "\n"

if which lspci > /dev/null 2>&1; then
    printf "VGA-compatible devices on PCI bus:\n"
    LC_ALL=C lspci | grep 'VGA compatible controller:'
    LC_ALL=C lspci -n | grep 'Class 0300:'
else
    printf "The lspci command was not found; not including PCI data.\n"
fi

printf "\n"

if [ -e "$XORGCONFIG" ]; then
    printf "Xorg X server configuration file status:\n"
    ls -dl "$XORGCONFIG"
    printf "\n"
    printf "Contents of $XORGCONFIG:\n"
    iconv -c -t ascii "$XORGCONFIG"
    printf "\n"
    if [ -d "$XORGCONFIG_DIR" ]; then
        printf "Contents of $XORGCONFIG_DIR:\n"
        ls -l "$XORGCONFIG_DIR"
        printf "\n"
    fi
else
    printf "$XORGCONFIG does not exist.\n"
fi

printf "\n"

KERNEL_VERSION=/proc/version

if [ -e "$KERNEL_VERSION" ]; then
    printf "Kernel version ($KERNEL_VERSION):\n"
    cat /proc/version
else
    printf "No kernel version found (missing $KERNEL_VERSION).\n"
fi

printf "\n"

XORG_LOGS=$(ls -dt /var/log/Xorg.*.log 2>/dev/null)

if [ -n "$XORG_LOGS" ]; then
    printf "Xorg X server log files on system:\n"
    ls -dlrt /var/log/Xorg.*.log 2>/dev/null
    printf "\n"
    for LOG in $XORG_LOGS; do
        if [ -f "$LOG" ]; then
            printf "Contents of most recent Xorg X server log file\n"
            printf "%s:\n" "$LOG"
            cat "$LOG"
            # the log files are large; only show the most recent
            break
        fi
    done
else
    printf "No Xorg X server log files found.\n"
fi

if [ -x /sbin/udevadm ]; then
    printf "\nudev information:\n"
    /sbin/udevadm info --export-db | awk -F '\n' -v RS='\n\n' '/E: ID_INPUT/ { print; print "" }'
fi

if [ -x /bin/dmesg ]; then
    printf "DRM Information from dmesg:\n"
    dmesg | egrep -i 'drm|agp'
fi

printf "\n"

# vim:set ai et sts=4 sw=4 tw=0:
